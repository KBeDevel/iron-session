Examples:
  ✔ Finish middleware @done(23-11-17 16:16)
  ✔ Show name in protected pages @done(23-11-17 16:16)
  ✔ Add explanations/fix examples basic @done(23-11-17 16:33)
  ✔ showcase swr example in first @done(23-11-17 17:08)
  ☐ Link to code in all examples
  ✔ Link to GitHub in homepage @done(23-11-17 17:12)
  ☐ Check preview deployment works
  ☐ Merge both getIronSession APIs
  ☐ Merge to main
  ☐ Release
  ☐ Move all remaining confirmed work to a single issue
    ☐ add default data option?
    ☐ change action to session (POST, GET, DELETE) in app-router-client-component-redirect-route-handler-fetch, as swr
  ☐ Check Notion page

  ☐ add protected page link anyone can access (+ redirect to login, perhaps use server components for this)
    ☐ add middleware example to check for protected pages
  ☐ change all calls to /session only
  ☐ optimistic updates in all examples if feasible easily
  ☐ add prefetch when possible
    ☐ add prefetch where relevant https://swr.vercel.app/docs/prefetching (index page)
  ☐ add example with magic link (+ explain where it can be used)

  ☐ app router + server component where relevant + client components where relevant (check partial prerendering)
  ☐ app router + client component + server action and optimistic updates https://nextjs.org/docs/app/building-your-application/data-fetching/forms-and-mutations#optimistic-updates
  ☐ add text below each example to show what's slow to load
  ☐ change all calls to POST DELETE /session (no more /login)
  ☐ provide a way to set default session data and update all examples with it
  ☐ ask community to complete other examples

  ☐ optimistic updates in general in the various examples, how?
  ☐ pages + redirects + fetch
  ☐ pages + swr
  ☐ pages + getServerSideProps
  ☐ app router + client component + route handlers + swr (no redirect)
  ☐ edit in codesandbox link
  ☐ deploy to vercel link
  ☐ +edge
  ☐ +skeletons
  ☐ +link to gh
  ☐ +pages examples to be done by community/later

Example:
  - Always link to code
  - Start with raw website, bad design, then add design gradually
  - app router example
  - app router + swr
  - server action (+ swr?)
  - middleware example + show code. usecase?
  - pages example + show code. usecase?
  - getServerSideProps (legacy)
  - read Next.js doc to find cases
  - disable JavaScript, what happens?

To answer:
- Why are iron-webcrypto and others parts of dev dependencies, are we building even for node?
- Are we testing in different Node.js versions? Next.js versions?

Test website must include, in a very clear way:
  ☐ Route handler examples (app router). Serverless and edge.
  ☐ Server actions. (can it be serverless and edge?)
  ☐ API routes examples (pages, legacy). Serverless and edge.
  ☐ getServerSideProps examples (pages, legacy). Serverless and edge.

☐ Test bun when the package is released in beta
☐ Test deno when the package is released in beta

Answered:
- Are we using workspaces?
  Yes

Archive:
  ✔ app router + client component + route handlers + redirects + fetch @done(23-11-16 00:05) @project(Examples)
  ✔ app router + server component + server action (the good stuff from lee, first example) @done(23-11-16 13:50) @project(Examples)
  ✔ check learn nextjs quickly @done(23-11-17 11:13) @project(Examples)
